name: Nightly Cleanup

on:
  schedule:
    - cron: '0 3 * * *'  # Runs at 11 PM ET, which is 3 AM UTC
  workflow_dispatch:

# Set up permissions for deploying with secretless Azure federated credentials
# https://learn.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-portal%2Clinux#set-up-azure-login-with-openid-connect-authentication
permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      AZURE_CLIENT_ID: ${{ vars.AZURE_CLIENT_ID }}
      AZURE_TENANT_ID: ${{ vars.AZURE_TENANT_ID }}
      AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
    steps:
       - name: Checkout
         uses: actions/checkout@v3

       - name: Install azd
         uses: Azure/setup-azd@v0.1.0

       - name: Log in with Azure (Federated Credentials)
         if: ${{ env.AZURE_CLIENT_ID != '' }}
         run: |
            azd auth login `
              --client-id "$Env:AZURE_CLIENT_ID" `
              --federated-credential-provider "github" `
              --tenant-id "$Env:AZURE_TENANT_ID"
         shell: pwsh

       - name: Log in with Azure (Client Credentials)
         if: ${{ env.AZURE_CREDENTIALS != '' }}
         run: |
            $info = $Env:AZURE_CREDENTIALS | ConvertFrom-Json -AsHashtable;
            Write-Host "::add-mask::$($info.clientSecret)"

            azd auth login `
              --client-id "$($info.clientId)" `
              --client-secret "$($info.clientSecret)" `
              --tenant-id "$($info.tenantId)"
         shell: pwsh
         env:
            AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}

       - name: Tear down
         run: azd down --no-prompt --force --purge
         env:
           AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}
           AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
           AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}

       - name: Tear down (with vnet)
         run: azd down --no-prompt --force --purge
         env:
           AZURE_ENV_NAME: ${{ vars.AZURE_ENV_NAME }}-vnet
           AZURE_LOCATION: ${{ vars.AZURE_LOCATION }}
           AZURE_SUBSCRIPTION_ID: ${{ vars.AZURE_SUBSCRIPTION_ID }}